datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             Int     @id @default(autoincrement())
  email          String  @unique
  namename       String?
  password       String
  phone          String
  profilePicture String?
  groups             Group[]
  events            Event[]
  userGroups        GroupUser[]
  userEvents        EventUser[]
}

model Group {
  id            Int       @id @default(autoincrement())
  secretCode    String
  adminId       Int
  admin         User      @relation(fields: [adminId], references: [id])
  events        Event[]
  createdAt     DateTime    @default(now())
  users         GroupUser[]
}



model Event {
  id            Int         @id @default(autoincrement())
  jobId         Int
  adminId       Int
  admin         User        @relation(fields: [adminId], references: [id])
  groupId       Int
  group         Group         @relation(fields: [groupId], references: [id])
  users         EventUser[]
  placeId       Place?
  createdAt     DateTime    @default(now())
}

model GroupUser {
  id            Int         @id @default(autoincrement())
  group         Group       @relation(fields:[groupId], references: [id])
  groupId       Int         
  user          User        @relation(fields:[userId], references: [id])
  userId        Int
}

model EventUser {
  id            Int         @id @default(autoincrement())
  event         Event       @relation(fields:[eventId], references: [id])
  eventId       Int         
  user          User        @relation(fields:[userId], references: [id])
  userId        Int
}

model Place {
  id        Int         @id @default(autoincrement())
  eventId   Int         @unique
  event     Event       @relation(fields:[eventId], references: [id])
  address   String      
  createdAt DateTime    @default(now())
}

